{{ $UPSTREAM_PWA := getenv "UPSTREAM_PWA" }}
{{ $CACHE_ACTIVE := getenv "CACHE" | strings.ToLower | regexp.Match "on|1|true|yes" }}

{{ define "LOCATION_TEMPLATE" }}
        {{- $channel := .channel }}
        {{- $application := "" }}{{ if (has . "application") }}{{ $application = join ( slice ";application" .application ) "=" }}{{ end }}
        {{- $identityProvider := "" }}{{ if (has . "identityProvider") }}{{ $identityProvider = .identityProvider }}{{ end }}
        {{- $lang := "default" }}{{ if (has . "lang") }}{{ $lang = .lang }}{{ end }}
        {{- $currency := "" }}{{ if (has . "currency") }}{{ $currency = .currency }}{{ end }}
        {{- $features := "" }}{{ if (has . "features") }}{{ $features = join ( slice ";features" .features ) "=" }}{{ end }}
        {{- $addFeatures := "" }}{{ if (has . "addFeatures") }}{{ $addFeatures = join ( slice ";addFeatures" .addFeatures ) "=" }}{{ end }}
        {{- $theme := "" }}{{ if (has . "theme") }}{{ $theme = join ( slice ";theme" .theme ) "=" }}{{ end }}
        {{- $baseHref := "/" }}{{ if (has . "baseHref") }}{{ $baseHref = .baseHref }}{{ end }}
        {{- $icmScheme := "" }}{{ if (has . "icmScheme") }}{{ $icmScheme = join ( slice "icmScheme" .icmScheme ) "=" }}{{ end }}
        {{- $icmPort := "" }}{{ if (has . "icmPort") }}{{ $icmPort = join ( slice "icmPort" .icmPort ) "=" }}{{ end }}
        {{- $icmHost := "default" }}{{ if (has . "icmHost") }}{{ $icmHost = .icmHost }}{{ end }}

        {{- $protected := true }}{{ if (has . "protected") }}{{ $protected = .protected }}{{ end }}
      {{- if $protected }}
      {{ else }}
        allow all;
        auth_basic off;
      {{ end }}
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;


        add_header X-icm-channel {{ $channel }} always;
        add_header X-icm-default-lang {{ $lang }} always;
        add_header X-ua-device $ua_device always;

        rewrite ^.*$ $ssr_rewrite;

      {{- if getenv "CACHE" | strings.ToLower | regexp.Match "on|1|true|yes" }}
        srcache_store_statuses 200 404;
        srcache_store_max_size 10000k;
        add_header X-Cache-Fetch-Status $srcache_fetch_status always;
        add_header X-Cache-Store-Status $srcache_store_status always;

        srcache_default_expire {{ getenv "CACHE_DURATION_NGINX" }};

        # make a nice cache key without parameters
        set $c_uri $ssr_curi;
        # for debugging set a readable key using `set_escape_uri`
        set_sha1 $key $scheme://$host$uri$c_uri;
        srcache_fetch GET /memcget key=$key;
        srcache_store PUT /memcset key=$key&exptime=$srcache_expire&status=$status;
      {{- end }}

        rewrite ^.*/index.html$ {{ $baseHref }}/loading;

        rewrite ^{{ $baseHref }}/?$ {{ $baseHref }}/home;

        rewrite '^(?!.*;lang=.*)(.*)$' '$1;lang={{ $lang }}';
        rewrite '^(?!.*;currency=.*)(.*)$' '$1;currency={{ $currency }}';

      {{ if $identityProvider }}
        rewrite '^(?!.*;identityProvider=.*)(.*)$' '$1;identityProvider={{ $identityProvider }}';
      {{ end }}

        set $default_rewrite_params ';icmHost={{ $icmHost }}{{ $icmScheme }}{{ $icmPort }};channel={{ $channel }}{{ $application }}{{ $features }}{{ $addFeatures }}{{ $theme }};baseHref={{ $baseHref | strings.ReplaceAll "/" "%2F" }};device=$ua_device';

        rewrite '^(.*)$' '$1$default_rewrite_params' break;

        proxy_pass {{ getenv "UPSTREAM_PWA" }};
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
{{- end }}

{{- define "OVERRIDE_IDENTITY_PROVIDER_TEMPLATE" }}
    {{- $identityProvider := join ( slice ";identityProvider" .type ) "=" }}
    rewrite '^((.*){{ .path }})$' '$1{{$identityProvider}}';
{{- end}}

{{- define "LOCATION_TEMPLATE_FOR_SITEMAP" }}
        {{- $icmBaseUrl := getenv "ICM_BASE_URL" }}
        {{- $baseHref := ""}}{{ if (has . "baseHref")}}{{ $baseHref = .baseHref }}{{end}}
        {{- $channel := .channel }}
        {{- $application := "rest" }}{{ if (has . "application") }}{{ $application = .application }}{{ end }}
        {{- $lang := "en_US" }}{{ if (has . "lang") }}{{ $lang = .lang }}{{ end }}
      {{- if $icmBaseUrl }}
      proxy_pass {{ $icmBaseUrl }}/INTERSHOP/static/WFS/{{ $channel }}/{{ $application }}/{{ $channel | strings.ReplaceAll "-Site" "" }}/{{ $lang }}/sitemaps/pwa/sitemap_;
      {{- else }}
      rewrite ^{{ $baseHref }}/sitemap.*$ {{ $baseHref }}/;
      {{- end -}}
{{- end }}

{{- if $CACHE_ACTIVE }}
upstream memcached_set {
    server {{ getenv "MEMCACHED_HOSTNAME" "memcached" }}:11211;
    keepalive 10;
}
upstream memcached_get {
    server {{ getenv "MEMCACHED_HOSTNAME" "memcached" }}-1:11211;
    server {{ getenv "MEMCACHED_HOSTNAME" "memcached" }}-2:11211;
    server {{ getenv "MEMCACHED_HOSTNAME" "memcached" }}-3:11211;
    keepalive 10;
}
{{- end }}

{{- range $domain, $mapping := (ds "domains") }}
server {
    server_name ~^{{ $domain }}$;
  {{ if getenv "SSL" | strings.ToLower | regexp.Match "on|1|true|yes" }}
    listen 443 ssl;
    ssl_certificate     /var/nginx/certs/cert.pem;
    ssl_certificate_key /var/nginx/certs/key.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # https://ma.ttias.be/force-redirect-http-https-custom-port-nginx/
    error_page  497 https://$http_host$request_uri;
  {{ else }}
    listen 80;
  {{- end }}

    access_log /var/log/nginx-access.log {{ getenv "LOGFORMAT" }};
    access_log /dev/stdout {{ getenv "LOGFORMAT" }} if=$loggable;

    include /etc/nginx/conf.d/cache-blacklist.conf;

  {{- if $CACHE_ACTIVE }}
    include /etc/nginx/conf.d/memcached-location.conf;
  {{- end }}

  {{- if getenv "OVERRIDE_IDENTITY_PROVIDERS" }}
    {{- range $domainOverride, $identyProviderOverride := (ds "overrideIdentityProviders") }}
      {{ if eq $domain $domainOverride }}
        {{- range $identyProviderOverride }}
          {{- tmpl.Exec "OVERRIDE_IDENTITY_PROVIDER_TEMPLATE" . }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}

  {{ if getenv "DEBUG" | strings.ToLower | regexp.Match "on|1|true|yes" }}
    error_log /dev/stdout notice;
    rewrite_log on;
  {{- end }}
  {{ if getenv "BASIC_AUTH" }}
    {{ if getenv "BASIC_AUTH_IP_WHITELIST" }}
    satisfy any;
    {{- range $ip := (ds "ipwhitelist") }}
    allow {{ $ip }};
    {{- end }}
    deny all;
    {{- end }}
    auth_basic              "Protected Area";
    auth_basic_user_file    /etc/nginx/.htpasswd;
  {{- end }}

    # let ICM handle everything ICM related
    location ~* ^/INTERSHOP.*$ {
        allow all;
        auth_basic off;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_no_cache true;
        proxy_cache_bypass true;
        add_header X-Cache-Status $upstream_cache_status;

        proxy_pass {{ $UPSTREAM_PWA }};
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # respect cache entries of static assets
    location ~* ^/(?!ngsw\.json)(metrics|assets|.*\.(js|css|json|txt|webmanifest|woff|woff2))(.*)$ {
        allow all;
        auth_basic off;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header X-Cache-Status $upstream_cache_status;

        proxy_pass {{ $UPSTREAM_PWA }};
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
  {{ if (has $mapping "channel") }}
    location / {
        {{- tmpl.Exec "LOCATION_TEMPLATE" $mapping }}
    }
    location ^~ /sitemap_ {
        {{- tmpl.Exec "LOCATION_TEMPLATE_FOR_SITEMAP" $mapping }}
    }
  {{- else -}}
    {{ range $mapping }}
    location {{ .baseHref }} {
        {{- tmpl.Exec "LOCATION_TEMPLATE" . }}
    }
    location ^~ {{ .baseHref }}{{if not ( .baseHref | strings.HasSuffix "/")}}/{{end}}sitemap_ {
        {{- tmpl.Exec "LOCATION_TEMPLATE_FOR_SITEMAP" . }}
    }
    {{ end }}
    {{- if (has ($mapping | jsonpath "$..baseHref") "/") }}
    {{- else }}
    location / {
        allow all;
        auth_basic off;
        {{ $first := index $mapping 0 -}}
        rewrite ^/$ "$scheme://$http_host{{ $first.baseHref }}/home" permanent;
        rewrite ^(.*)$ "$scheme://$http_host{{ $first.baseHref }}$request_uri?" permanent;
    }
    location ^~ /sitemap_ {
        {{- tmpl.Exec "LOCATION_TEMPLATE_FOR_SITEMAP" $first }}
    }
    {{- end -}}
  {{- end }}

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
{{ end }}
