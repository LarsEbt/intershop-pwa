trigger:
  - develop
  - master
  - 'refs/tags/*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  registryServerName: $(registryName).azurecr.io

stages:
  - stage: ssr
    displayName: 'Build the SSR container'
    variables:
      imageName: 'intershop-pwa-$(Build.SourceBranchName)'
    jobs:
      - job: tag
        displayName: 'set tag variable'
        steps:
          - bash: |
              echo -n "##vso[task.setvariable variable=tag;isOutput=true]"
              if [[ $(Build.SourceBranch) =~ tags/(.*) ]]
              then
                echo ${BASH_REMATCH[1]}
              else
                echo $(build.buildId)
              fi
            name: setvarStep
      - job: build_ssr
        displayName: 'docker build ssr'
        dependsOn: tag
        variables:
          tag: $[ dependencies.tag.outputs['setvarStep.tag'] ]
        steps:
          - bash: |
              docker build -f $(system.defaultWorkingDirectory)/Dockerfile -t $(registryServerName)/$(imageName):$(tag) $(system.defaultWorkingDirectory) --build-arg displayVersion=$(tag)

      - job: push_ssr
        displayName: 'docker push ssr'
        dependsOn: tag
        variables:
          tag: $[ dependencies.tag.outputs['setvarStep.tag'] ]
        steps:
          - bash: |
              docker login $(registryServerName) -u $(registryLogin) -p $(registryPassword)
              docker push $(registryServerName)/$(imageName):$(tag)
  - stage: nginx
    displayName: 'Build the nginx container'
    variables:
      imageName: 'intershop-pwa-nginx-$(Build.SourceBranchName)'
    jobs:
      - job: build_nginx
        displayName: 'docker build nginx'
        variables:
          - name: tag
            value: $[ stageDependencies.ssr.tag.outputs['setvarStep.tag'] ]
        steps:
          - bash: |
              docker build -f $(system.defaultWorkingDirectory)/nginx/Dockerfile -t $(registryServerName)/$(imageName):$(tag) $(system.defaultWorkingDirectory)/nginx
      - job: push_nginx
        displayName: 'docker push nginx'
        variables:
          - name: tag
            value: $[ stageDependencies.ssr.tag.outputs['setvarStep.tag'] ]
        steps:
          - bash: |
              docker login $(registryServerName) -u $(registryLogin) -p $(registryPassword)
              docker push $(registryServerName)/$(imageName):$(tag)
